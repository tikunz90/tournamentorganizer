# Generated by Django 2.2.10 on 2025-05-13 21:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('U18', 'Under 18'), ('U16', 'Under 16'), ('U14', 'Under 14'), ('U12', 'Under 12'), ('U10', 'Under 10')], max_length=10)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('court_number', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('GROUP', 'Group Phase'), ('KNOCKOUT', 'Knockout Phase'), ('PLACEMENT', 'Placement Phase'), ('FINALS', 'Finals')], max_length=20)),
                ('order', models.PositiveIntegerField(help_text='Order in which this phase occurs')),
                ('number_of_teams', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_groups', models.PositiveIntegerField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phases', to='cup_manager.Category')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(help_text="e.g. 'Top 2 teams advance'", max_length=255)),
                ('from_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions_from', to='cup_manager.Phase')),
                ('to_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions_to', to='cup_manager.Phase')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='cup_manager.Court')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('SLOT', 'Dummy/Slot - Placeholder'), ('GBO', 'GBO - Registered Team'), ('FUN', 'Fun - Default Team')], default='FUN', help_text='Type of team: Slot=placeholder, GBO=registered, Fun=default', max_length=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='cup_manager.Category')),
            ],
        ),
        migrations.CreateModel(
            name='StructureTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('GROUP_ONLY', 'Only Group Phase'), ('GROUP_KO', 'Group Phase + Knockout'), ('GROUP_KO_PLACEMENT', 'Group Phase + Knockout + Placement')], max_length=30)),
                ('num_teams', models.PositiveIntegerField()),
                ('teams_per_group', models.PositiveIntegerField()),
                ('num_knockout_teams', models.PositiveIntegerField(blank=True, null=True)),
                ('num_placement_teams', models.PositiveIntegerField(blank=True, null=True)),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='template', to='cup_manager.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='structure', to='cup_manager.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team1_score', models.IntegerField(blank=True, null=True)),
                ('team2_score', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('court', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cup_manager.Court')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='cup_manager.Group')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='cup_manager.Phase')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team1', to='cup_manager.Team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team2', to='cup_manager.Team')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='cup_manager.Team')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='GroupTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cup_manager.Group')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cup_manager.Team')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('group', 'position')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='phase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='cup_manager.Phase'),
        ),
        migrations.AddField(
            model_name='group',
            name='teams',
            field=models.ManyToManyField(related_name='groups', through='cup_manager.GroupTeam', to='cup_manager.Team'),
        ),
        migrations.AddField(
            model_name='court',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courts', to='cup_manager.Event'),
        ),
        migrations.AddField(
            model_name='category',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='cup_manager.Event'),
        ),
        migrations.AlterUniqueTogether(
            name='court',
            unique_together={('event', 'court_number')},
        ),
    ]
