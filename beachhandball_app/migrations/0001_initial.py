# Generated by Django 2.2.10 on 2021-04-16 19:11

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_unixdatetimefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('starttime', django_unixdatetimefield.fields.UnixDateTimeField(db_column='start_ts', default=django.utils.timezone.now)),
                ('duration_of_halftime', models.IntegerField(default=600)),
                ('number_of_penalty_tries', models.SmallIntegerField(default=5)),
                ('court', models.SmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)])),
                ('score_team_a_halftime_1', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('score_team_a_halftime_2', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('score_team_a_penalty', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('score_team_b_halftime_1', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('score_team_b_halftime_2', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('score_team_b_penalty', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('winner_halftime_1', models.IntegerField(blank=True, null=True)),
                ('winner_halftime_2', models.IntegerField(blank=True, null=True)),
                ('winner_penalty', models.IntegerField(blank=True, null=True)),
                ('gamestate', models.CharField(blank=True, choices=[('APPENDING', 'APPENDING'), ('RUNNING', 'RUNNING'), ('FINISHED', 'FINISHED')], max_length=9, null=True)),
                ('act_time', models.IntegerField(blank=True, null=True)),
                ('gamingstate', models.CharField(blank=True, choices=[('Ready', 'Ready'), ('1.HT', '1.HT'), ('Halftime Break', 'Halftime Break'), ('2.HT', '2.HT'), ('Penalty', 'Penalty'), ('Paused', 'Paused'), ('Finished', 'Finished'), ('SignRequired', 'SignRequired')], max_length=14, null=True)),
                ('scouting_state', models.CharField(blank=True, choices=[('APPENDING', 'APPENDING'), ('RUNNING', 'RUNNING'), ('FINISHED', 'FINISHED')], max_length=9, null=True)),
            ],
            options={
                'db_table': 'bh_game',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('number', models.SmallIntegerField()),
                ('birthday', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bh_player',
            },
        ),
        migrations.CreateModel(
            name='PlayerPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('name_short', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'bh_player_position',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('start_ts', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now)),
                ('end_ts', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now)),
                ('is_actual', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'bh_season',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('name_short', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'bh_series',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('gbo_team', models.IntegerField(null=True)),
                ('is_dummy', models.BooleanField(default=False, null=True)),
            ],
            options={
                'db_table': 'bh_team',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('organizer', models.SmallIntegerField(default=0)),
                ('name', models.CharField(db_column='name', max_length=50)),
            ],
            options={
                'db_table': 'bh_tournament',
            },
        ),
        migrations.CreateModel(
            name='TournamentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('classification', models.CharField(blank=True, choices=[('Adult', 'Adult'), ('Junior', 'Junior'), ('Mixed', 'Mixed')], max_length=20)),
                ('category', models.CharField(blank=True, choices=[('MEN', 'MEN'), ('WOMEN', 'WOMAN'), ('U18 MEN', 'U18 MEN'), ('U18 WOMEN', 'U18 WOMAN'), ('U16 MEN', 'U16 MEN'), ('U16 WOMEN', 'U16 WOMAN'), ('U14 MEN', 'U14 MEN'), ('U14 WOMEN', 'U14 WOMAN'), ('MIXED', 'MIXED')], max_length=20)),
            ],
            options={
                'db_table': 'bh_tourn_category',
            },
        ),
        migrations.CreateModel(
            name='TournamentEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('start_ts', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now)),
                ('end_ts', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now)),
                ('max_number_teams', models.SmallIntegerField(default=0)),
                ('is_in_configuration', models.BooleanField(default=False)),
                ('season_tournament_id', models.IntegerField(null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentCategory')),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Tournament')),
            ],
            options={
                'db_table': 'bh_tournament_event',
            },
        ),
        migrations.CreateModel(
            name='TournamentState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('tournament_state', models.CharField(blank=True, choices=[('GROUPA', 'GROUPA'), ('GROUPB', 'GROUPB'), ('GROUPC', 'GROUPC'), ('GROUPD', 'GROUPD'), ('GROUPE', 'GROUPE'), ('GROUPF', 'GROUPF'), ('INTERROUND_A', 'INTERROUND_A'), ('INTERROUND_B', 'INTERROUND_B'), ('LOOSER_ROUND', 'LOOSER_ROUND'), ('ROUND_OF_16', 'ROUND_OF_16'), ('QUARTERFINALS', 'QUARTERFINALS'), ('SEMIFINALS', 'SEMIFINALS'), ('FINAL', 'FINAL'), ('FINAL_RANKING', 'FINAL_RANKING')], max_length=20)),
                ('tournament_stage', models.CharField(blank=True, choices=[('GROUP_STAGE', 'GROUP_STAGE'), ('MAIN_ROUND', 'MAIN_ROUND'), ('KNOCKOUT_STAGE', 'KNOCKOUT_STAGE'), ('PLAYOFF_STAGE', 'PLAYOFF_STAGE'), ('FINAL', 'FINAL')], max_length=20)),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('max_number_teams', models.SmallIntegerField(default=0)),
                ('min_number_teams', models.SmallIntegerField(default=0)),
                ('hierarchy', models.SmallIntegerField(default=0)),
                ('grid_row', models.SmallIntegerField(default=0)),
                ('grid_col', models.SmallIntegerField(default=0)),
                ('direct_compare', models.BooleanField(default=False)),
                ('is_populated', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, max_length=50)),
                ('color', colorfield.fields.ColorField(choices=[('#FFFFFF', 'white'), ('#000000', 'black'), ('#2a25be', 'Persian Blue'), ('#ff0005', 'red'), ('#fff200', 'yellow')], default='#FF0000', max_length=18)),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent')),
            ],
            options={
                'db_table': 'bh_tournament_states',
            },
        ),
        migrations.CreateModel(
            name='TournamentTeamTransition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('origin_rank', models.SmallIntegerField(default=0)),
                ('target_rank', models.SmallIntegerField(default=0)),
                ('keep_stats', models.BooleanField(default=False)),
                ('comment', models.CharField(max_length=50)),
                ('origin_ts_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentState')),
                ('target_ts_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentState')),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent')),
            ],
            options={
                'db_table': 'bh_tournament_team_transition',
            },
        ),
        migrations.CreateModel(
            name='TournamentStateSorting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sorting', models.CharField(choices=[('sets_win', 'sets_win'), ('sets_loose', 'sets_loose')], max_length=13)),
                ('priority', models.SmallIntegerField(db_column='priority', default=0)),
                ('comment', models.CharField(max_length=50)),
                ('tournament_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.TournamentState')),
            ],
            options={
                'db_table': 'bh_ts_sorting',
            },
        ),
        migrations.CreateModel(
            name='TournamentStateRanking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.SmallIntegerField(db_column='rank', default=0)),
                ('next_ts', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.TournamentState')),
                ('ts', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentState')),
            ],
            options={
                'db_table': 'bh_ts_ranking',
            },
        ),
        migrations.CreateModel(
            name='TournamentStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('order', models.SmallIntegerField(default=0)),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.TournamentEvent')),
            ],
            options={
                'db_table': 'bh_tournament_stage',
            },
        ),
        migrations.CreateModel(
            name='TournamentFinalRanking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.SmallIntegerField(default=0)),
                ('points', models.SmallIntegerField(default=0)),
                ('series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Series')),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent')),
            ],
            options={
                'db_table': 'bh_tournament_final_ranking',
            },
        ),
        migrations.CreateModel(
            name='TeamTournamentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('rank', models.SmallIntegerField(default=0)),
                ('points', models.SmallIntegerField(default=0)),
                ('season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Season')),
                ('series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Series')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Team')),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent')),
            ],
            options={
                'db_table': 'bh_team_tourn_result',
            },
        ),
        migrations.CreateModel(
            name='TeamTournamentRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('registration_state', models.CharField(choices=[('PENDING', 'PENDING'), ('ACCEPTED', 'ACCEPTED'), ('REJECTED', 'REJECTED')], db_column='registration_state', default=('PENDING', 'PENDING'), max_length=50)),
                ('season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Season')),
                ('series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Series')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Team')),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent')),
            ],
            options={
                'db_table': 'bh_team_tournanment_registration',
            },
        ),
        migrations.CreateModel(
            name='TeamStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('number_of_played_games', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('game_points', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('game_points_bonus', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('sets_win', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('sets_loose', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('points_made', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('points_received', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('rank_initial', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('rank', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('name_table', models.CharField(db_column='name_table', default='No team', max_length=50, null=True)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Team')),
                ('tournament_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent')),
                ('tournamentstate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.TournamentState')),
            ],
            options={
                'db_table': 'bh_team_stats',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentCategory'),
        ),
        migrations.AddField(
            model_name='team',
            name='tournament_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TournamentEvent'),
        ),
        migrations.AddField(
            model_name='team',
            name='tournamentstate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.TournamentState'),
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('score', models.SmallIntegerField(blank=True, default=0)),
                ('kempa_try', models.SmallIntegerField(blank=True, default=0)),
                ('kempa_success', models.SmallIntegerField(blank=True, default=0)),
                ('spin_try', models.SmallIntegerField(blank=True, default=0)),
                ('spin_success', models.SmallIntegerField(blank=True, default=0)),
                ('shooter_try', models.SmallIntegerField(blank=True, default=0)),
                ('shooter_success', models.SmallIntegerField(blank=True, default=0)),
                ('one_try', models.SmallIntegerField(blank=True, default=0)),
                ('one_success', models.SmallIntegerField(blank=True, default=0)),
                ('suspension', models.SmallIntegerField(blank=True, default=0)),
                ('redcard', models.SmallIntegerField(blank=True, default=0)),
                ('is_ranked', models.SmallIntegerField(blank=True, default=False)),
                ('games_played', models.SmallIntegerField(blank=True, default=False)),
                ('goal_keeper_success', models.SmallIntegerField(blank=True, default=0)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Game')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Player')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beachhandball_app.Team')),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Tournament')),
            ],
            options={
                'db_table': 'bh_player_game_stats',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beachhandball_app.PlayerPosition'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='tournament',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='beachhandball_app.Tournament'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GameAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('timestamp', models.DateTimeField(db_column='TimeStamp')),
                ('gametime', models.TimeField(db_column='GameTime')),
                ('period', models.CharField(choices=[('HT1', 'HT1'), ('HT2', 'HT2'), ('P', 'P')], db_column='Period', max_length=3)),
                ('action', models.CharField(choices=[('KEMPA', 'KEMPA'), ('SPIN', 'SPIN'), ('SHOOTER', 'SHOOTER'), ('ONE', 'ONE'), ('SUSPENSION', 'SUSPENSION'), ('REDCARD', 'REDCARD'), ('CORRECTION', 'CORRECTION')], db_column='Action', max_length=10)),
                ('action_result', models.CharField(db_column='ActionResult', max_length=7)),
                ('score_team_a', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('score_team_b', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('time_min', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('time_sec', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Game')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Player')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Team')),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Tournament')),
            ],
            options={
                'db_table': 'bh_gameaction',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='team_a',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='team_b',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='team_st_a',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TeamStats'),
        ),
        migrations.AddField(
            model_name='game',
            name='team_st_b',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.TeamStats'),
        ),
        migrations.AddField(
            model_name='game',
            name='tournament',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Tournament'),
        ),
        migrations.AddField(
            model_name='game',
            name='tournament_state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='beachhandball_app.TournamentState'),
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_unixdatetimefield.fields.UnixDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('number', models.SmallIntegerField(default=0)),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='beachhandball_app.Tournament')),
            ],
            options={
                'db_table': 'bh_courts',
            },
        ),
    ]
